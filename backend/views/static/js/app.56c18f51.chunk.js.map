{"version":3,"sources":["components/PlayAudio.js","components/Nicknames.js","App.js","web-build/register-service-worker.js"],"names":["cookies","Cookies","webSocketUri","location","protocol","get","PlayAudio","useState","io","transports","socket","message","setMessage","useEffect","JSON","stringify","getAll","chunks","on","data","Uint8Array","forEach","item","push","audioArray","from","playAudio","arr","a","async","binstr","Array","prototype","map","call","ch","String","fromCharCode","join","base64arr","btoa","uri","Audio","Sound","createAsync","shouldPlay","View","Button","onPress","emit","title","Text","Nicknames","name2","setName2","style","width","fontWeight","TextInput","height","borderColor","borderWidth","onChangeText","text","value","event","preventDefault","console","log","App","styles","container","StatusBar","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error"],"mappings":"sPAOMA,EAAU,I,OAAIC,GAKdC,GAFsC,WAAtBC,SAASC,SAAwB,SAAW,SAC/CJ,EAAQK,IAAI,UACoB,SAEpC,SAASC,IAAa,IAAD,EACfC,oBAAS,kBAAMC,IAAGN,KAAe,CAC9CO,WAAY,CAAC,eADVC,EADyB,cAKFH,mBAAS,QALP,WAKzBI,EALyB,KAKhBC,EALgB,KAOhCC,qBAAU,WACND,EAAWE,KAAKC,UAAUf,EAAQgB,WAClC,IAAIC,EAAS,GAEbP,EAAOQ,GAAG,gBAAgB,SAAAC,GACN,IAAIC,WAAWD,GACrBE,SAAQ,SAAAC,GAAI,OAAIL,EAAOM,KAAKD,SAG1CZ,EAAOQ,GAAG,OAAO,WACb,IAAIM,EAAaJ,WAAWK,KAAKR,GACjCS,EAAUF,GACVP,EAAS,QAEd,IAEH,IAIMS,EAAY,SAAMC,GAAN,mBAAAC,EAAAC,OAAA,uDACVC,EAASC,MAAMC,UAAUC,IAAIC,KAAKP,GAAK,SAAAQ,GACvC,OAAOC,OAAOC,aAAaF,MAC5BG,KAAK,IACJC,EAAYC,YAAKV,GACjBW,EAAM,yBAA2BF,EALvB,WAAAX,EAAA,MAMRc,IAAMC,MAAMC,YACd,CAAEH,IAAKA,GACP,CAAEI,YAAY,KARJ,6DAYlB,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,QAnBQ,WAChBtC,EAAOuC,KAAK,cAmBJC,MAAM,eAEV,kBAACC,EAAA,EAAD,KAAOxC,I,aCxDJ,SAASyC,IAAa,IAAD,EAEN7C,mBAAS,IAFH,WAEzB8C,EAFyB,KAElBC,EAFkB,KAahC,OACI,kBAACR,EAAA,EAAD,CAAMS,MAAO,CAAEC,MAAO,MAClB,kBAACL,EAAA,EAAD,+BAA8B,GAC1B,kBAACA,EAAA,EAAD,CAAMI,MAAO,CAAEE,WAAY,SAAWJ,IAE1C,kBAACF,EAAA,EAAD,sDAEA,kBAACO,EAAA,EAAD,CACIH,MAAO,CAAEI,OAAQ,GAAIC,YAAa,OAAQC,YAAa,GACvDC,aAAc,SAAAC,GAAI,OAAIT,EAASS,IAC/BC,MAAOX,IAEX,kBAACN,EAAA,EAAD,CACIG,MAAM,SACNF,QAnBS,SAACiB,GAClBA,EAAMC,iBACNC,QAAQC,IAAIf,OCPL,SAASgB,IAEtB,OACE,kBAACvB,EAAA,EAAD,CAAMS,MAAOe,EAAOC,WAClB,kBAACC,EAAA,UAAD,CAAWjB,MAAM,SACjB,kBAACjD,EAAD,MACA,kBAAC8C,EAAD,OAKN,IAAMkB,EAASG,IAAWC,OAAO,CAC/BH,UAAW,CACTI,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,a,+DCpBhB,kBAAmBC,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CC,MAAK,SAAUC,OAGfC,OAAM,SAAUC,GACfrB,QAAQmB,KAAK,oCAAqCE,W","file":"static/js/app.56c18f51.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, View, Text } from 'react-native';\nimport io from \"socket.io-client\";\nimport { btoa } from 'js-base64';\nimport { Audio } from 'expo-av';\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\n// Fetching ip address from instance\nconst webSocketHost = location.protocol === 'https:' ? 'wss://' : 'ws://';\nconst externalIp = cookies.get('app-ip');\nconst webSocketUri =  webSocketHost + externalIp + ':65080';\n\nexport default function PlayAudio() {\n    const [socket] = useState(() => io(webSocketUri), {\n        transports: ['websocket']\n    });\n\n    const [message, setMessage] = useState('test');\n\n    useEffect(() => {\n        setMessage(JSON.stringify(cookies.getAll()));\n        let chunks = [];\n\n        socket.on('receiveAudio', data => {\n            let dataArray = new Uint8Array(data);\n            dataArray.forEach(item => chunks.push(item));\n        });\n\n        socket.on('end', () => {\n            let audioArray = Uint8Array.from(chunks);\n            playAudio(audioArray);\n            chunks = [];\n        })\n    }, []);\n\n    const handleClick = () => {\n        socket.emit('sendAudio');\n    }\n\n    const playAudio = async arr => {\n        let binstr = Array.prototype.map.call(arr, ch => {\n            return String.fromCharCode(ch);\n        }).join('');\n        let base64arr = btoa(binstr);\n        let uri = 'data:audio/mp3;base64,' + base64arr;\n        await Audio.Sound.createAsync(\n            { uri: uri },\n            { shouldPlay: true }\n        )\n    }\n\n    return (\n        <View>\n            <Button\n                onPress={handleClick}\n                title=\"Play Quack\"\n            />\n            <Text>{message}</Text>\n        </View>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button, View, TextInput, Text } from 'react-native';\n\nexport default function Nicknames() {\n\n    const [name2, setName2] = useState('');\n\n    const handleChange = (event) => {\n        setName2(event.target.value);\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(name2);\n    }\n\n    return (\n        <View style={{ width: 300 }}>\n            <Text>Your name is currently {''}\n                <Text style={{ fontWeight: 'bold' }}>{name2}</Text>\n            </Text>\n            <Text>If you do not like it, enter a new name here:</Text>\n            \n            <TextInput\n                style={{ height: 40, borderColor: 'gray', borderWidth: 1 }}\n                onChangeText={text => setName2(text)}\n                value={name2} \n            />\n            <Button\n                title='Submit'\n                onPress={handleSubmit}\n            />\n        </View>\n    );\n}\n","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport PlayAudio from \"./components/PlayAudio\";\nimport Nicknames from \"./components/Nicknames\";\n\nexport default function App() {\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n      <PlayAudio />\n      <Nicknames />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}